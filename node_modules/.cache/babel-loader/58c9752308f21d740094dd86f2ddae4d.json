{"ast":null,"code":"import { formatDate, totalPanelVisible } from \"@/utils/dateUtils\";\nexport default {\n  data() {\n    return {\n      dayLabel: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n      dates: [],\n      prevVisibleDate: [],\n      nextVisibleDate: []\n    };\n  },\n\n  props: {\n    days: {\n      type: Array,\n      default: () => []\n    },\n    prevMonthDays: {\n      type: Array,\n      default: () => []\n    },\n    nextMonthDays: {\n      type: Array,\n      default: () => []\n    },\n    selectedDate: {\n      type: String,\n      default: () => ''\n    }\n  },\n  methods: {\n    setSelectedDate(day) {\n      this.$emit(\"setSelectedDate\", day);\n    }\n\n  },\n  computed: {\n    isDateActive() {\n      return dateValue => {\n        return this.selectedDate === formatDate(dateValue);\n      };\n    }\n\n  },\n  watch: {\n    days(newValue) {\n      let prevDateVisible = [];\n\n      if (newValue[0].getDay() !== 0) {\n        prevDateVisible = this.prevMonthDays.slice(this.prevMonthDays.length - newValue[0].getDay(), this.prevMonthDays.length);\n      }\n\n      this.prevVisibleDate = prevDateVisible;\n      let prevDateAndCurrentDate = prevDateVisible.concat(this.days);\n      let nextDateVisible = this.nextMonthDays.slice(0, totalPanelVisible - prevDateAndCurrentDate.length);\n      this.nextVisibleDate = nextDateVisible;\n      this.dates = prevDateAndCurrentDate.concat(nextDateVisible);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAaA,SAAQA,UAAR,EAAoBC,iBAApB,QAA4C,mBAA5C;AACA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,cAAQ,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CADL;AAELC,WAAK,EAAE,EAFF;AAGLC,qBAAc,EAAI,EAHb;AAILC,qBAAc,EAAI;AAJb,KAAP;AAMD,GARY;;AASbC,OAAK,EAAE;AACLC,QAAI,EAAE;AACJC,UAAI,EAAEC,KADF;AAEJC,aAAO,EAAE,MAAM;AAFX,KADD;AAKLC,iBAAa,EAAE;AACbH,UAAI,EAAEC,KADO;AAEbC,aAAO,EAAE,MAAM;AAFF,KALV;AASLE,iBAAa,EAAE;AACbJ,UAAI,EAAEC,KADO;AAEbC,aAAO,EAAE,MAAM;AAFF,KATV;AAaLG,gBAAY,EAAE;AACZL,UAAI,EAAEM,MADM;AAEZJ,aAAO,EAAE,MAAM;AAFH;AAbT,GATM;AA2BbK,SAAO,EAAE;AACPC,mBAAe,CAACC,GAAD,EAAM;AACnB,WAAKC,KAAL,CAAW,iBAAX,EAA8BD,GAA9B;AACD;;AAHM,GA3BI;AAgCbE,UAAO,EAAI;AACTC,gBAAY,GAAG;AACb,aAAOC,SAAQ,IAAK;AAClB,eAAO,KAAKR,YAAL,KAAsBd,UAAU,CAACsB,SAAD,CAAvC;AACF,OAFA;AAGF;;AALS,GAhCE;AAuCbC,OAAK,EAAE;AACLf,QAAI,CAACgB,QAAD,EAAW;AACb,UAAIC,eAAc,GAAI,EAAtB;;AACA,UAAID,QAAQ,CAAC,CAAD,CAAR,CAAYE,MAAZ,OAAyB,CAA7B,EAAgC;AAC9BD,uBAAc,GAAI,KAAKb,aAAL,CAAmBe,KAAnB,CAAyB,KAAKf,aAAL,CAAmBgB,MAAnB,GAA4BJ,QAAQ,CAAC,CAAD,CAAR,CAAYE,MAAZ,EAArD,EAA2E,KAAKd,aAAL,CAAmBgB,MAA9F,CAAlB;AACF;;AACA,WAAKvB,eAAL,GAAuBoB,eAAvB;AACA,UAAII,sBAAqB,GAAIJ,eAAe,CAACK,MAAhB,CAAuB,KAAKtB,IAA5B,CAA7B;AACA,UAAIuB,eAAc,GAAI,KAAKlB,aAAL,CAAmBc,KAAnB,CAAyB,CAAzB,EAA4B1B,iBAAgB,GAAI4B,sBAAsB,CAACD,MAAvE,CAAtB;AACA,WAAKtB,eAAL,GAAuByB,eAAvB;AACA,WAAK3B,KAAL,GAAayB,sBAAsB,CAACC,MAAvB,CAA8BC,eAA9B,CAAb;AACD;;AAXI;AAvCM,CAAf","names":["formatDate","totalPanelVisible","data","dayLabel","dates","prevVisibleDate","nextVisibleDate","props","days","type","Array","default","prevMonthDays","nextMonthDays","selectedDate","String","methods","setSelectedDate","day","$emit","computed","isDateActive","dateValue","watch","newValue","prevDateVisible","getDay","slice","length","prevDateAndCurrentDate","concat","nextDateVisible"],"sourceRoot":"","sources":["/home/nhannt/date-picker/src/components/DayPicker.vue"],"sourcesContent":["<template>\n  <div class=\"day-picker\">\n    <div class=\"day-label\">\n      <span v-for=\"(label,index) in dayLabel\" :key=\"index\">{{ label }}</span>\n    </div>\n    <div class=\"day-render\">\n      <span v-for=\"(day, index) in dates\" :key=\"index\" @click=\"setSelectedDate(day)\"\n      :class=\"[{isDateActive(day) ? 'active-date':''}]\">{{ day.getDate() }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {formatDate, totalPanelVisible} from \"@/utils/dateUtils\";\nexport default {\n  data() {\n    return {\n      dayLabel: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n      dates: [],\n      prevVisibleDate : [],\n      nextVisibleDate : [],\n    }\n  },\n  props: {\n    days: {\n      type: Array,\n      default: () => []\n    },\n    prevMonthDays: {\n      type: Array,\n      default: () => []\n    },\n    nextMonthDays: {\n      type: Array,\n      default: () => []\n    },\n    selectedDate: {\n      type: String,\n      default: () => ''\n    }\n  },\n  methods: {\n    setSelectedDate(day) {\n      this.$emit(\"setSelectedDate\", day)\n    },\n  },\n  computed : {\n    isDateActive() {\n      return dateValue => {\n        return this.selectedDate === formatDate(dateValue)\n      }\n    }\n  },\n  watch: {\n    days(newValue) {\n      let prevDateVisible = []\n      if (newValue[0].getDay() !== 0) {\n        prevDateVisible = this.prevMonthDays.slice(this.prevMonthDays.length - newValue[0].getDay(), this.prevMonthDays.length)\n      }\n      this.prevVisibleDate = prevDateVisible\n      let prevDateAndCurrentDate = prevDateVisible.concat(this.days)\n      let nextDateVisible = this.nextMonthDays.slice(0, totalPanelVisible - prevDateAndCurrentDate.length)\n      this.nextVisibleDate = nextDateVisible\n      this.dates = prevDateAndCurrentDate.concat(nextDateVisible)\n    },\n  }\n}\n</script>\n<style scoped lang=\"scss\">\n.day-picker {\n  margin-top: 5px;\n  padding: 0 5px;\n  font-size: 12px;\n\n  .day-label {\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 5px;\n\n    span {\n      text-align: center;\n      width: 27.25px;\n    }\n  }\n\n  .day-render {\n    display: grid;\n    grid-template-columns: auto auto auto auto auto auto auto;\n\n    span {\n      padding: 5px;\n      text-align: center;\n\n      &:hover {\n        background: rgba(197, 255, 236, 0.87);\n      }\n    }\n\n    .active-date {\n      background: rgba(197, 255, 236, 0.87);\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}