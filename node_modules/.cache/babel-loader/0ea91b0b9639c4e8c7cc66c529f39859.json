{"ast":null,"code":"const totalPanelVisible = 42;\nexport default {\n  data() {\n    return {\n      dayLabel: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n      dates: []\n    };\n  },\n\n  props: {\n    days: {\n      type: Array,\n      default: () => []\n    },\n    prevMonthDays: {\n      type: Array,\n      default: () => []\n    },\n    nextMonthDays: {\n      type: Array,\n      default: () => []\n    },\n    selectedDate: {\n      type: String,\n      default: () => ''\n    }\n  },\n  computed: {\n    formatDate() {\n      return dateValue => {\n        let date = dateValue.getDate();\n        let month = dateValue.getMonth();\n        let year = dateValue.getFullYear();\n\n        if (date < 10) {\n          date = `0${date}`;\n        }\n\n        if (month < 10) {\n          month = `0${month}`;\n        }\n\n        console.log(`${date}/${month}/${year}`);\n        return `${date}/${month}/${year}`;\n      };\n    }\n\n  },\n  methods: {\n    setChooseDate(date) {\n      this.$emit(\"setChooseDate\", date);\n    }\n\n  },\n  watch: {\n    days(newValue) {\n      let prevDateVisible = [];\n\n      if (newValue[0].getDay() !== 1) {\n        prevDateVisible = this.prevMonthDays.slice(this.prevMonthDays.length - newValue[0].getDay(), this.prevMonthDays.length);\n      }\n\n      let totalDate = prevDateVisible.concat(this.days);\n      let nextDateVisible = this.nextMonthDays.slice(0, totalPanelVisible - totalDate.length);\n      this.dates = totalDate.concat(nextDateVisible);\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAaA,MAAMA,iBAAgB,GAAI,EAA1B;AACA,eAAe;AACbC,MAAI,GAAG;AACL,WAAO;AACLC,cAAQ,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,CADL;AAELC,WAAK,EAAE;AAFF,KAAP;AAID,GANY;;AAObC,OAAK,EAAE;AACLC,QAAI,EAAE;AACJC,UAAI,EAAEC,KADF;AAEJC,aAAO,EAAE,MAAM;AAFX,KADD;AAKLC,iBAAa,EAAE;AACbH,UAAI,EAAEC,KADO;AAEbC,aAAO,EAAE,MAAM;AAFF,KALV;AASLE,iBAAa,EAAE;AACbJ,UAAI,EAAEC,KADO;AAEbC,aAAO,EAAE,MAAM;AAFF,KATV;AAaLG,gBAAY,EAAE;AACZL,UAAI,EAAEM,MADM;AAEZJ,aAAO,EAAE,MAAM;AAFH;AAbT,GAPM;AAyBbK,UAAQ,EAAE;AACRC,cAAU,GAAG;AACX,aAAOC,SAAQ,IAAK;AAClB,YAAIC,IAAG,GAAID,SAAS,CAACE,OAAV,EAAX;AACA,YAAIC,KAAI,GAAIH,SAAS,CAACI,QAAV,EAAZ;AACA,YAAIC,IAAG,GAAIL,SAAS,CAACM,WAAV,EAAX;;AACA,YAAIL,IAAG,GAAI,EAAX,EAAe;AACbA,cAAG,GAAK,IAAGA,IAAK,EAAhB;AACF;;AACA,YAAIE,KAAI,GAAI,EAAZ,EAAgB;AACdA,eAAI,GAAK,IAAGA,KAAM,EAAlB;AACF;;AACAI,eAAO,CAACC,GAAR,CAAa,GAAEP,IAAK,IAAGE,KAAM,IAAGE,IAAK,EAArC;AACA,eAAQ,GAAEJ,IAAK,IAAGE,KAAM,IAAGE,IAAK,EAAhC;AACF,OAZA;AAaF;;AAfQ,GAzBG;AA0CbI,SAAO,EAAE;AACPC,iBAAa,CAACT,IAAD,EAAO;AAClB,WAAKU,KAAL,CAAW,eAAX,EAA4BV,IAA5B;AACD;;AAHM,GA1CI;AA+CbW,OAAK,EAAE;AACLtB,QAAI,CAACuB,QAAD,EAAW;AACb,UAAIC,eAAc,GAAI,EAAtB;;AACA,UAAID,QAAQ,CAAC,CAAD,CAAR,CAAYE,MAAZ,OAAyB,CAA7B,EAAgC;AAC9BD,uBAAc,GAAI,KAAKpB,aAAL,CAAmBsB,KAAnB,CAAyB,KAAKtB,aAAL,CAAmBuB,MAAnB,GAA4BJ,QAAQ,CAAC,CAAD,CAAR,CAAYE,MAAZ,EAArD,EAA2E,KAAKrB,aAAL,CAAmBuB,MAA9F,CAAlB;AACF;;AACA,UAAIC,SAAQ,GAAIJ,eAAe,CAACK,MAAhB,CAAuB,KAAK7B,IAA5B,CAAhB;AACA,UAAI8B,eAAc,GAAI,KAAKzB,aAAL,CAAmBqB,KAAnB,CAAyB,CAAzB,EAA4B/B,iBAAgB,GAAIiC,SAAS,CAACD,MAA1D,CAAtB;AACA,WAAK7B,KAAL,GAAa8B,SAAS,CAACC,MAAV,CAAiBC,eAAjB,CAAb;AACD;;AATI;AA/CM,CAAf","names":["totalPanelVisible","data","dayLabel","dates","props","days","type","Array","default","prevMonthDays","nextMonthDays","selectedDate","String","computed","formatDate","dateValue","date","getDate","month","getMonth","year","getFullYear","console","log","methods","setChooseDate","$emit","watch","newValue","prevDateVisible","getDay","slice","length","totalDate","concat","nextDateVisible"],"sourceRoot":"","sources":["/home/nhannt/date-picker/src/components/DayPicker.vue"],"sourcesContent":["<template>\n  <div class=\"day-picker\">\n    <div class=\"day-label\">\n      <span v-for=\"(label,index) in dayLabel\" :key=\"index\">{{ label }}</span>\n    </div>\n    <div class=\"day-render\">\n      <span v-for=\"(day, index) in dates\" :key=\"index\" @click=\"setChooseDate(day)\"\n            :class=\"selectedDate === formatDate(day) && 'active-date'\">{{ day.getDate() }}</span>\n    </div>\n  </div>\n</template>\n\n<script>\nconst totalPanelVisible = 42\nexport default {\n  data() {\n    return {\n      dayLabel: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n      dates: [],\n    }\n  },\n  props: {\n    days: {\n      type: Array,\n      default: () => []\n    },\n    prevMonthDays: {\n      type: Array,\n      default: () => []\n    },\n    nextMonthDays: {\n      type: Array,\n      default: () => []\n    },\n    selectedDate: {\n      type: String,\n      default: () => ''\n    }\n  },\n  computed: {\n    formatDate() {\n      return dateValue => {\n        let date = dateValue.getDate()\n        let month = dateValue.getMonth()\n        let year = dateValue.getFullYear()\n        if (date < 10) {\n          date = `0${date}`\n        }\n        if (month < 10) {\n          month = `0${month}`\n        }\n        console.log(`${date}/${month}/${year}`)\n        return `${date}/${month}/${year}`\n      }\n    }\n  },\n  methods: {\n    setChooseDate(date) {\n      this.$emit(\"setChooseDate\", date)\n    },\n  },\n  watch: {\n    days(newValue) {\n      let prevDateVisible = []\n      if (newValue[0].getDay() !== 1) {\n        prevDateVisible = this.prevMonthDays.slice(this.prevMonthDays.length - newValue[0].getDay(), this.prevMonthDays.length)\n      }\n      let totalDate = prevDateVisible.concat(this.days)\n      let nextDateVisible = this.nextMonthDays.slice(0, totalPanelVisible - totalDate.length)\n      this.dates = totalDate.concat(nextDateVisible)\n    },\n  }\n}\n</script>\n<style scoped lang=\"scss\">\n.day-picker {\n  margin-top: 5px;\n  padding: 0 5px;\n  font-size: 12px;\n\n  .day-label {\n    display: flex;\n    flex-direction: row;\n    margin-bottom: 5px;\n\n    span {\n      text-align: center;\n      width: 27.25px;\n    }\n  }\n\n  .day-render {\n    display: grid;\n    grid-template-columns: auto auto auto auto auto auto auto;\n\n    span {\n      padding: 5px;\n      text-align: center;\n\n      &:hover {\n        background: rgba(197, 255, 236, 0.87);\n      }\n    }\n\n    .active-date {\n      background: rgba(197, 255, 236, 0.87);\n    }\n  }\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}